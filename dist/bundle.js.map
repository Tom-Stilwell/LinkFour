{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./game-view.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","GameView","constructor","ctx","width","height","this","board","posX","posY","radius","circles","moveCount","row","col","push","pos","Math","round","color","drawBoard","clearRect","beginPath","fillStyle","rect","values","fill","closePath","drawCircles","forEach","circle","arc","PI","findClickedCircle","clicked","sqrt","pow","circleFillInEvent","event","clientX","clientY","console","log","resetCircles","document","addEventListener","canvas","getElementById","getContext","W","window","innerWidth","innerHeight","resetButton","gameView","initialRender"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class GameView {\n  constructor(ctx, width, height) {\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n\n    this.board = {\n      posX: 100,\n      posY: 100,\n      width: this.width,\n      height: this.height\n    };\n    this.radius = this.board.width / 20;\n    this.circles = [];\n\n    this.moveCount = 0;\n\n    for (let row = 1; row <= 6; row++) {\n      for (let col = 1; col <= 7; col++) {\n        this.circles.push({\n          pos: [\n            Math.round(this.board.posX + col * this.board.width / 8),\n            Math.round(this.board.posY + row * this.board.height / 7)\n          ],\n          color: \"white\"\n        });\n      }\n    }\n  }\n\n  drawBoard() {\n    this.ctx.clearRect(\n      this.board.posX,\n      this.board.posY,\n      this.width,\n      this.height\n    );\n    this.ctx.beginPath();\n    this.ctx.fillStyle = \"yellow\";\n    this.ctx.rect(...Object.values(this.board));\n    this.ctx.fill();\n    this.ctx.closePath();\n\n    this.drawCircles();\n  }\n\n  drawCircles() {\n    this.circles.forEach(circle => {\n      this.ctx.beginPath();\n      this.ctx.fillStyle = circle.color;\n      this.ctx.arc(...circle.pos, this.radius, 0, 2 * Math.PI, false);\n      this.ctx.fill();\n      this.ctx.closePath();\n    });\n  }\n\n  findClickedCircle(pos) {\n    let clicked;\n    this.circles.forEach(circle => {\n      if (\n        Math.sqrt(\n          Math.pow(pos[0] - circle.pos[0], 2) +\n            Math.pow(pos[1] - circle.pos[1], 2)\n        ) < this.radius\n      ) {\n        clicked = circle;\n      }\n    });\n\n    return clicked;\n  }\n\n  circleFillInEvent(event) {\n    const pos = [event.clientX, event.clientY];\n    const clicked = this.findClickedCircle(pos);\n\n    if (clicked && clicked.color === \"white\") {\n      clicked.color = this.moveCount % 2 === 0 ? \"black\" : \"red\";\n      this.moveCount++;\n    }\n    this.drawCircles();\n\n    console.log(clicked);\n  }\n\n  resetCircles() {\n    this.circles.forEach(circle => (circle.color = \"white\"));\n  }\n}\n","import GameView from \"./game-view.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const W = window.innerWidth;\n  const H = window.innerHeight;\n  canvas.width = W / 3;\n  canvas.height = W / 3.5;\n\n  const resetButton = document.getElementById(\"reset\");\n\n  function initialRender() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const gameView = new GameView(ctx, canvas.width - 100, canvas.height - 100);\n    gameView.drawBoard();\n\n    document.addEventListener(\"click\", event =>\n      gameView.circleFillInEvent(event)\n    );\n    resetButton.addEventListener(\"click\", () => {\n      gameView.resetCircles();\n      gameView.drawBoard();\n    });\n  }\n\n  initialRender();\n});\n"],"sourceRoot":""}