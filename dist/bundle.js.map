{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","document","addEventListener","canvas","getElementById","ctx","getContext","W","window","innerWidth","innerHeight","width","height","resetButton","board","posx","posy","radius","circles","moveCount","row","col","push","pos","Math","round","color","drawBoard","clearRect","beginPath","fillStyle","rect","values","fill","closePath","drawCircles","forEach","circle","arc","PI","circleFillInEvent","event","clicked","sqrt","pow","findClickedCircle","clientX","clientY","console","log"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import GameView from \"./game-view.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const W = window.innerWidth;\n  const H = window.innerHeight;\n  canvas.width = W / 3;\n  canvas.height = W / 3.5;\n\n  const resetButton = document.getElementById(\"reset\");\n\n  const board = {\n    posx: 100,\n    posy: 100,\n    width: canvas.width - 100,\n    height: canvas.height - 100\n  };\n  const radius = board.width / 20;\n  const circles = [];\n  let moveCount = 0;\n  for (let row = 1; row <= 6; row++) {\n    for (let col = 1; col <= 7; col++) {\n      circles.push({\n        pos: [\n          Math.round(board.posx + col * board.width / 8),\n          Math.round(board.posy + row * board.height / 7)\n        ],\n        color: \"white\"\n      });\n    }\n  }\n\n  function drawBoard() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.beginPath();\n    ctx.fillStyle = \"yellow\";\n    ctx.rect(...Object.values(board));\n    ctx.fill();\n    ctx.closePath();\n\n    drawCircles();\n  }\n\n  function drawCircles() {\n    circles.forEach(circle => {\n      ctx.beginPath();\n      ctx.fillStyle = circle.color;\n      ctx.arc(...circle.pos, radius, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.closePath();\n    });\n  }\n\n  function circleFillInEvent(event) {\n    const pos = [event.clientX, event.clientY];\n    const clicked = findClickedCircle(pos);\n\n    if (clicked && clicked.color === \"white\") {\n      clicked.color = moveCount % 2 === 0 ? \"black\" : \"red\";\n      moveCount++;\n    }\n    drawCircles();\n\n    console.log(clicked);\n  }\n\n  function findClickedCircle(pos) {\n    let clicked;\n    circles.forEach(circle => {\n      if (\n        Math.sqrt(\n          Math.pow(pos[0] - circle.pos[0], 2) +\n            Math.pow(pos[1] - circle.pos[1], 2)\n        ) < radius\n      ) {\n        clicked = circle;\n      }\n    });\n\n    return clicked;\n  }\n\n  function initialRender() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawBoard();\n    document.addEventListener(\"click\", circleFillInEvent);\n    resetButton.addEventListener(\"click\", () => {\n      circles.forEach(circle => (circle.color = \"white\"));\n      drawBoard();\n    });\n  }\n\n  initialRender();\n});\n"],"sourceRoot":""}